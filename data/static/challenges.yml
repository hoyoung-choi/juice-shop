-
  name: 'API-only XSS'
  category: 'XSS'
  description: 'Perform a <i>persisted</i> XSS attack with <code>&lt;iframe src="javascript:alert(`xss`)"&gt;</code> without using the frontend application at all.'
  difficulty: 3
  hint: 'You need to work with the server-side API directly. Try different HTTP verbs on different entities exposed through the API.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/xss.html#perform-a-persisted-xss-attack-without-using-the-frontend-application-at-all'
  key: restfulXssChallenge
  disabledEnv:
    - Docker
    - Heroku
-
  name: 'Access Log'
  category: 'Sensitive Data Exposure'
  description: 'Gain access to any access log file of the server.'
  difficulty: 4
  hint: 'Who would want a server access log to be accessible through a web application?'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#gain-access-to-any-access-log-file-of-the-server'
  key: accessLogDisclosureChallenge
-
  name: 'Admin Registration'
  category: 'Improper Input Validation'
  description: 'Register as a user with administrator privileges.'
  difficulty: 3
  hint: 'You have to assign the unassignable.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/improper-input-validation.html#register-as-a-user-with-administrator-privileges'
  key: registerAdminChallenge
-
  name: 'Admin Section'
  category: 'Broken Access Control'
  description: 'Access the administration section of the store.'
  difficulty: 2
  hint: 'It is just slightly harder to find than the score board link.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-access-control.html#access-the-administration-section-of-the-store'
  key: adminSectionChallenge
-
  name: 'Arbitrary File Write'
  category: 'Vulnerable Components'
  description: 'Overwrite the <a href="/ftp/legal.md">Legal Information</a> file.'
  difficulty: 6
  hint: 'Look out for a tweet praising new functionality of the web shop. Then find a third party vulnerability associated with it.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/vulnerable-components.html#overwrite-the-legal-information-file'
  key: fileWriteChallenge
  disabledEnv:
    - Docker
    - Heroku
-
  name: 'Bjoern''s Favorite Pet'
  category: 'Broken Authentication'
  description: 'Reset the password of Bjoern''s OWASP account via the <a href="/#/forgot-password">Forgot Password</a> mechanism with <i>the original answer</i> to his security question.'
  difficulty: 3
  hint: 'He might have spoilered it on at least one occasion where a camera was running. Maybe elsewhere as well.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-authentication.html#reset-the-password-of-bjoerns-owasp-account-via-the-forgot-password-mechanism'
  key: resetPasswordBjoernOwaspChallenge
-
  name: 'Blockchain Hype'
  category: 'Security through Obscurity'
  description: 'Learn about the Token Sale before its official announcement.'
  difficulty: 5
  hint: 'The developers truly believe in "Security through Obscurity" over actual access restrictions.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/security-through-obscurity.html#learn-about-the-token-sale-before-its-official-announcement'
  key: tokenSaleChallenge
-
  name: 'Blocked RCE DoS'
  category: 'Insecure Deserialization'
  description: 'Perform a Remote Code Execution that would keep a less hardened application busy <em>forever</em>.'
  difficulty: 5
  hint: 'The feature you need to exploit for this challenge is not directly advertised anywhere.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/insecure-deserialization.html#perform-a-remote-code-execution-that-would-keep-a-less-hardened-application-busy-forever'
  key: rceChallenge
  disabledEnv:
    - Docker
    - Heroku
-
  name: 'CAPTCHA Bypass'
  category: 'Broken Anti Automation'
  description: 'Submit 10 or more customer feedbacks within 10 seconds.'
  difficulty: 3
  hint: 'After finding a CAPTCHA bypass, write a script that automates feedback submission. Or open many browser tabs and be really quick.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-anti-automation.html#submit-10-or-more-customer-feedbacks-within-10-seconds'
  key: captchaBypassChallenge
-
  name: 'Change Bender''s Password'
  category: 'Broken Authentication'
  description: 'Change Bender''s password into <i>slurmCl4ssic</i> without using SQL Injection or Forgot Password.'
  difficulty: 5
  hint: 'In previous releases this challenge was wrongly accused of being based on CSRF.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-authentication.html#change-benders-password-into-slurmcl4ssic-without-using-sql-injection-or-forgot-password'
  key: changePasswordBenderChallenge
-
  name: 'Christmas Special'
  category: 'Injection'
  description: 'Order the Christmas special offer of 2014.'
  difficulty: 4
  hint: 'Find out how the application handles unavailable products and try to find a loophole.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/injection.html#order-the-christmas-special-offer-of-2014'
  key: christmasSpecialChallenge
-
  name: 'CSP Bypass'
  category: 'XSS'
  description: 'Bypass the Content Security Policy and perform an XSS attack with <code>&lt;script&gt;alert(`xss`)&lt;/script&gt;</code> on a legacy page within the application.'
  difficulty: 4
  hint: 'What is even "better" than a legacy page with a homegrown RegEx sanitizer? Having CSP injection issues on the exact same page as well!'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/xss.html#bypass-the-content-security-policy-and-perform-an-xss-attack-on-a-legacy-page'
  key: usernameXssChallenge
  disabledEnv:
    - Docker
    - Heroku
-
  name: 'Client-side XSS Protection'
  category: 'XSS'
  description: 'Perform a <i>persisted</i> XSS attack with <code>&lt;iframe src="javascript:alert(`xss`)"&gt;</code> bypassing a <i>client-side</i> security mechanism.'
  difficulty: 3
  hint: 'Only some input fields validate their input. Even less of these are persisted in a way where their content is shown on another screen.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/xss.html#perform-a-persisted-xss-attack-bypassing-a-client-side-security-mechanism'
  key: persistedXssUserChallenge
  disabledEnv:
    - Docker
    - Heroku
-
  name: 'Confidential Document'
  category: 'Sensitive Data Exposure'
  description: 'Access a confidential document.'
  difficulty: 1
  hint: 'Analyze and tamper with links in the application that deliver a file directly.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#access-a-confidential-document'
  key: directoryListingChallenge
-
  name: 'DOM XSS'
  category: 'XSS'
  description: 'Perform a <i>DOM</i> XSS attack with <code>&lt;iframe src="javascript:alert(`xss`)"&gt;</code>.'
  difficulty: 1
  hint: 'Look for an input field where its content appears in the HTML when its form is submitted.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/xss.html#perform-a-dom-xss-attack'
  key: localXssChallenge
  tutorial:
    order: 2
-
  name: 'Database Schema'
  category: 'Injection'
  description: 'Exfiltrate the entire DB schema definition via SQL Injection.'
  difficulty: 3
  hint: 'Find out where this information could come from. Then craft a UNION SELECT attack string against an endpoint that offers an unnecessary way to filter data.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/injection.html#exfiltrate-the-entire-db-schema-definition-via-sql-injection'
  key: dbSchemaChallenge
-
  name: 'Deprecated Interface'
  category: 'Security Misconfiguration'
  description: 'Use a deprecated B2B interface that was not properly shut down.'
  difficulty: 2
  hint: 'The developers who disabled the interface think they could go invisible by just closing their eyes.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/security-misconfiguration.html#use-a-deprecated-b2b-interface-that-was-not-properly-shut-down'
  key: deprecatedInterfaceChallenge
-
  name: 'Easter Egg'
  category: 'Broken Access Control'
  description: 'Find the hidden <a href="http://en.wikipedia.org/wiki/Easter_egg_(media)" target="_blank">easter egg</a>.'
  difficulty: 4
  hint: 'If you solved one of the three file access challenges, you already know where to find the easter egg.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-access-control.html#find-the-hidden-easter-egg'
  key: easterEggLevelOneChallenge
-
  name: 'Email Leak'
  category: 'Sensitive Data Exposure'
  description: 'Perform an unwanted information disclosure by accessing data cross-domain.'
  difficulty: 5
  hint: 'Try to find and attack an endpoint that responds with user information. SQL Injection is not the solution here.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#perform-an-unwanted-information-disclosure-by-accessing-data-cross-domain'
  key: emailLeakChallenge
-
  name: 'Ephemeral Accountant'
  category: 'Injection'
  description: 'Log in with the (non-existing) accountant <i>acc0unt4nt@juice-sh.op</i> without ever registering that user.'
  difficulty: 4
  hint: 'Try to create the needed user "out of thin air".'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/injection.html#log-in-with-the-non-existing-accountant-without-ever-registering-that-user'
  key: ephemeralAccountantChallenge
-
  name: 'Error Handling'
  category: 'Security Misconfiguration'
  description: 'Provoke an error that is neither very gracefully nor consistently handled.'
  difficulty: 1
  hint: 'Try to submit bad input to forms. Alternatively tamper with URL paths or parameters.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/security-misconfiguration.html#provoke-an-error-that-is-neither-very-gracefully-nor-consistently-handled'
  key: errorHandlingChallenge
-
  name: 'Expired Coupon'
  category: 'Improper Input Validation'
  description: 'Successfully redeem an expired campaign coupon code.'
  difficulty: 4
  hint: 'Try to identify past special event or holiday campaigns of the shop first.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/improper-input-validation.html#successfully-redeem-an-expired-campaign-coupon-code'
  key: manipulateClockChallenge
-
  name: 'Extra Language'
  category: 'Broken Anti Automation'
  description: 'Retrieve the language file that never made it into production.'
  difficulty: 5
  hint: 'Brute force is not the only option for this challenge, but a perfectly viable one.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-anti-automation.html#retrieve-the-language-file-that-never-made-it-into-production'
  key: extraLanguageChallenge
-
  name: 'Five-Star Feedback'
  category: 'Broken Access Control'
  description: 'Get rid of all 5-star customer feedback.'
  difficulty: 2
  hint: 'Once you found admin section of the application, this challenge is almost trivial.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-access-control.html#get-rid-of-all-5-star-customer-feedback'
  key: feedbackChallenge
-
  name: 'Forged Coupon'
  category: 'Cryptographic Issues'
  description: 'Forge a coupon code that gives you a discount of at least 80%.'
  difficulty: 6
  hint: 'Try either a) a knowledgable brute force attack or b) reverse engineering or c) some research in the cloud.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/cryptographic-issues.html#forge-a-coupon-code-that-gives-you-a-discount-of-at-least-80'
  key: forgedCouponChallenge
-
  name: 'Forged Feedback'
  category: 'Broken Access Control'
  description: 'Post some feedback in another users name.'
  difficulty: 3
  hint: 'You can solve this by tampering with the user interface or by intercepting the communication with the RESTful backend.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-access-control.html#post-some-feedback-in-another-users-name'
  key: forgedFeedbackChallenge
  tutorial:
    order: 8
-
  name: 'Forged Review'
  category: 'Broken Access Control'
  description: 'Post a product review as another user or edit any user''s existing review.'
  difficulty: 3
  hint: 'Observe the flow of product review posting and editing and see if you can exploit it.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-access-control.html#post-a-product-review-as-another-user-or-edit-any-users-existing-review'
  key: forgedReviewChallenge
-
  name: 'Forged Signed JWT'
  category: 'Vulnerable Components'
  description: 'Forge an almost properly RSA-signed JWT token that impersonates the (non-existing) user <i>rsa_lord@juice-sh.op</i>.'
  difficulty: 6
  hint: 'This challenge is explicitly not about acquiring the RSA private key used for JWT signing.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/vulnerable-components.html#forge-an-almost-properly-rsa-signed-jwt-token'
  key: jwtForgedChallenge
  disabledEnv:
    - Windows
-
  name: 'Forgotten Developer Backup'
  category: 'Sensitive Data Exposure'
  description: 'Access a developer''s forgotten backup file.'
  difficulty: 4
  hint: 'You need to trick a security mechanism into thinking that the file you want has a valid file type.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#access-a-developers-forgotten-backup-file'
  key: forgottenDevBackupChallenge
-
  name: 'Forgotten Sales Backup'
  category: 'Sensitive Data Exposure'
  description: 'Access a salesman''s forgotten backup file.'
  difficulty: 4
  hint: 'You need to trick a security mechanism into thinking that the file you want has a valid file type.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#access-a-salesmans-forgotten-backup-file'
  key: forgottenBackupChallenge
-
  name: 'Frontend Typosquatting'
  category: 'Vulnerable Components'
  description: '<a href="/#/contact">Inform the shop</a> about a <i>typosquatting</i> imposter that dug itself deep into the frontend. (Mention the exact name of the culprit)'
  difficulty: 5
  hint: 'This challenge has nothing to do with mistyping web domains. There is no conveniently misplaced file helping you with this one either. Or is there?'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/vulnerable-components.html#inform-the-shop-about-a-typosquatting-imposter-that-dug-itself-deep-into-the-frontend'
  key: typosquattingAngularChallenge
-
  name: 'GDPR Data Erasure'
  category: 'Broken Authentication'
  description: 'Log in with Chris'' erased user account.'
  difficulty: 3
  hint: 'Turns out that something is technically and legally wrong with the implementation of the "right to be forgotten" for users.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-authentication.html#log-in-with-chris-erased-user-account'
  key: ghostLoginChallenge
-
  name: 'GDPR Data Theft'
  category: 'Sensitive Data Exposure'
  description: 'Steal someone else''s personal data without using Injection.'
  difficulty: 4
  hint: 'Trick the regular Data Export to give you more than actually belongs to you.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#steal-someone-elses-personal-data-without-using-injection'
  key: dataExportChallenge
-
  name: 'HTTP-Header XSS'
  category: 'XSS'
  description: 'Perform a <i>persisted</i> XSS attack with <code>&lt;iframe src="javascript:alert(`xss`)"&gt;</code> through an HTTP header.'
  difficulty: 4
  hint: 'Finding a piece of displayed information that could originate from an HTTP header is part of this challenge.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/xss.html#perform-a-persisted-xss-attack-through-an-http-header'
  key: httpHeaderXssChallenge
  disabledEnv:
    - Docker
    - Heroku
-
  name: 'Imaginary Challenge'
  category: 'Cryptographic Issues'
  description: 'Solve challenge #999. Unfortunately, this challenge does not exist.'
  difficulty: 6
  hint: 'You need to trick the hacking progress persistence feature into thinking you solved challenge #999.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/cryptographic-issues.html#solve-challenge-999'
  key: continueCodeChallenge
-
  name: 'Leaked Access Logs'
  category: 'Sensitive Data Exposure'
  description: 'Dumpster dive the Internet for a leaked password and log in to the original user account it belongs to. (Creating a new account with the same password does not qualify as a solution.)'
  difficulty: 5
  hint: 'Once you have it, a technique called "Password Spraying" might prove useful.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#dumpster-dive-the-internet-for-a-leaked-password-and-log-in-to-the-original-user-account-it-belongs-to'
  key: dlpPasswordSprayingChallenge
-
  name: 'Leaked Unsafe Product'
  category: 'Sensitive Data Exposure'
  description: 'Identify an unsafe product that was removed from the shop and <a href="/#/contact">inform the shop</a> which ingredients are dangerous.'
  difficulty: 4
  hint: 'Your own SQLi and someone else''s Ctrl-V will be your accomplices in this challenge!'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#identify-an-unsafe-product-that-was-removed-from-the-shop-and-inform-the-shop-which-ingredients-are-dangerous'
  key: dlpPastebinDataLeakChallenge
-
  name: 'Legacy Typosquatting'
  category: 'Vulnerable Components'
  description: '<a href="/#/contact">Inform the shop</a> about a <i>typosquatting</i> trick it has been a victim of at least in <code>v6.2.0-SNAPSHOT</code>. (Mention the exact name of the culprit)'
  difficulty: 4
  hint: 'This challenge has nothing to do with mistyping web domains. Investigate the forgotten developer''s backup file instead.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/vulnerable-components.html#inform-the-shop-about-a-typosquatting-trick-it-has-been-a-victim-of'
  key: typosquattingNpmChallenge
-
  name: 'Login Admin'
  category: 'Injection'
  description: 'Log in with the administrator''s user account.'
  difficulty: 2
  hint: 'Try different SQL Injection attack patterns depending whether you know the admin''s email address or not.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/injection.html#log-in-with-the-administrators-user-account'
  key: loginAdminChallenge
  tutorial:
    order: 5
-
  name: 'Login Amy'
  category: 'Sensitive Data Exposure'
  description: 'Log in with Amy''s original user credentials. (This could take 93.83 billion trillion trillion centuries to brute force, but luckily she did not read the "One Important Final Note")'
  difficulty: 3
  hint: 'This challenge will make you go after a needle in a haystack.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#log-in-with-amys-original-user-credentials'
  key: loginAmyChallenge
-
  name: 'Login Bender'
  category: 'Injection'
  description: 'Log in with Bender''s user account.'
  difficulty: 3
  hint: 'If you know Bender''s email address, try SQL Injection. Bender''s password hash might not help you very much.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/injection.html#log-in-with-benders-user-account'
  key: loginBenderChallenge
  tutorial:
    order: 10
-
  name: 'Login Bjoern'
  category: 'Broken Authentication'
  description: 'Log in with Bjoern''s Gmail account <i>without</i> previously changing his password, applying SQL Injection, or hacking his Google account.'
  difficulty: 4
  hint: 'The security flaw behind this challenge is 100% OWASP Juice Shop''s fault and 0% Google''s.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-authentication.html#log-in-with-bjoerns-gmail-account'
  key: oauthUserPasswordChallenge
-
  name: 'Login CISO'
  category: 'Broken Authentication'
  description: 'Exploit OAuth 2.0 to log in with the Chief Information Security Officer''s user account.'
  difficulty: 5
  hint: 'Don''t try to beat Google''s OAuth 2.0 service. Rather investigate implementation flaws on OWASP Juice Shop''s end.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-authentication.html#exploit-oauth-20-to-log-in-with-the-cisos-user-account'
  key: loginCisoChallenge
-
  name: 'Login Jim'
  category: 'Injection'
  description: 'Log in with Jim''s user account.'
  difficulty: 3
  hint: 'Try cracking Jim''s password hash if you harvested it already. Alternatively, if you know Jim''s email address, try SQL Injection.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/injection.html#log-in-with-jims-user-account'
  key: loginJimChallenge
  tutorial:
    order: 9
-
  name: 'Login MC SafeSearch'
  category: 'Sensitive Data Exposure'
  description: 'SQL Injection이나 우회하지 않고 MC SafeSearch 계정으로 로그인하세요.'
  difficulty: 2
  hint: '당신은 MC의 히트송 "Protect Ya Passwordz"를 들어야 할 것입니다..'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#log-in-with-mc-safesearchs-original-user-credentials'
  key: loginRapperChallenge
-
  name: 'Login Support Team'
  category: 'Security Misconfiguration'
  description: 'SQL Injection이나 우회하지 않고 Support team 계정으로 로그인하세요.'
  difficulty: 6
  hint: '이 과제의 근본적인 결함은 기술적 약점보다 훨씬 더 많은 인적 오류입니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/security-misconfiguration.html#log-in-with-the-support-teams-original-user-credentials'
  key: loginSupportChallenge
-
  name: 'Manipulate Basket'
  category: 'Broken Access Control'
  description: '다른 사용자의 장바구니에 상품을 넣으세요.'
  difficulty: 3
  hint: '장바구니에 상품을 담을 때 일어나는 HTTP 통신을 잘 살펴보세요. 장바구니에 들어있는 상품의 수량을 변경하는 것은 의미가 없습니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-access-control.html#put-an-additional-product-into-another-users-shopping-basket'
  key: basketManipulateChallenge
-
  name: 'Misplaced Signature File'
  category: 'Sensitive Data Exposure'
  description: '잘못 위치한 <a href="https://github.com/Neo23x0/sigma">SIEM 시그니처</a> 파일을 획득하세요.'
  difficulty: 4
  hint: '보안 매커니즘을 속여 다운로드 가능한 확장자라고 생각하게 만드세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#access-a-misplaced-siem-signature-file'
  key: misplacedSignatureFileChallenge
-
  name: 'Multiple Likes'
  category: 'Broken Anti Automation'
  description: '동일 유저로 하나의 리뷰에 3번 이상 좋아요를 누르세요.'
  difficulty: 6
  hint: '시간을 지키는 것은 군수의 예절이다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-anti-automation.html#like-any-review-at-least-three-times-as-the-same-user'
  key: timingAttackChallenge
-
  name: 'Nested Easter Egg'
  category: 'Cryptographic Issues'
  description: '좀 더 심화된 암호화 분석으로 <i>진짜</i> easter egg를 찾으세요!'
  difficulty: 4
  hint: '이 문제를 해결하기 위해 여러 단계의 강력한 암호화를 거쳐야 할 수도 있습니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/cryptographic-issues.html#apply-some-advanced-cryptanalysis-to-find-the-real-easter-egg'
  key: easterEggLevelTwoChallenge
-
  name: 'NoSQL DoS'
  category: 'Injection'
  description: '서버를 잠시동안 재웁시다.'
  difficulty: 4
  hint: '이 문제는 서비스 거부(DoS:Denial of Service) 공격입니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/injection.html#let-the-server-sleep-for-some-time'
  key: noSqlCommandChallenge
  disabledEnv:
    - Docker
    - Heroku
-
  name: 'NoSQL Exfiltration'
  category: 'Injection'
  description: '모든 주문은 우리 것입니다! 우리 것이 아닌 주문일지라도..'
  difficulty: 5
  hint: 'MongoDB의 WHERE절이 어떻게 동작하는지 확인하세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/injection.html#all-your-orders-are-belong-to-us'
  key: noSqlOrdersChallenge
  disabledEnv:
    - Docker
    - Heroku
-
  name: 'NoSQL Manipulation'
  category: 'Injection'
  description: '여러개 상품의 리뷰를 한꺼번에 업데이트하세요.'
  difficulty: 4
  hint: 'MongoDB의 UPDATE 문법을 살펴보세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/injection.html#update-multiple-product-reviews-at-the-same-time'
  key: noSqlReviewsChallenge
-
  name: 'Outdated Whitelist'
  category: 'Unvalidated Redirects'
  description: '당신을 우리 비트코인 계좌로 안내 해드릴게요.'
  difficulty: 1
  hint: '코드에서 제대로 꺼내지 못했을 수도 있습니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/unvalidated-redirects.html#let-us-redirect-you-to-one-of-our-crypto-currency-addresses'
  key: redirectCryptoCurrencyChallenge
-
  name: 'Password Strength'
  category: 'Broken Authentication'
  description: '변조나 SQL Injection하지 않고 Admin 계정으로 로그인하세요.'
  difficulty: 2
  hint: '아래와 같은 방법으로 쉽게 풀 수 있습니다. a) 무제한 대입 b) password hash를 crack c) 그냥 추측한다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-authentication.html#log-in-with-the-administrators-user-credentials-without-previously-changing-them-or-applying-sql-injection'
  key: weakPasswordChallenge
  tutorial:
    order: 6
-
  name: 'Payback Time'
  category: 'Improper Input Validation'
  description: '당신을 부자로 만들어주는 주문을 실행하세요!'
  difficulty: 3
  hint: '당신은 말 그대로 당신에게 돈을 빚진 가게를 만들어야합니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/improper-input-validation.html#place-an-order-that-makes-you-rich'
  key: negativeOrderChallenge
-
  name: 'Premium Paywall'
  category: 'Cryptographic Issues'
  description: '<i class="far fa-gem"></i><i class="far fa-gem"></i><i class="far fa-gem"></i><i class="far fa-gem"></i><i class="far fa-gem"></i><!--IvLuRfBJYlmStf9XfL6ckJFngyd9LfV1JaaN/KRTPQPidTuJ7FR+D/nkWJUF+0xUF07CeCeqYfxq+OJVVa0gNbqgYkUNvn//UbE7e95C+6e+7GtdpqJ8mqm4WcPvUGIUxmGLTTAC2+G9UuFCD1DUjg==-->특별 페이지 접속을 위해 프리미엄 도전과제를 여세요.'
  difficulty: 6
  hint: '도전 과제를 여는 것은 무료입니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/cryptographic-issues.html#unlock-premium-challenge-to-access-exclusive-content'
  key: premiumPaywallChallenge
-
  name: 'Privacy Policy'
  category: 'Miscellaneous'
  description: '우리 상점의 개인정보보호 정책을 읽어보세요.'
  difficulty: 1
  hint: '진짜 읽었는지 확인하지 않습니다. 그냥 한번 읽어보세요..'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/miscellaneous.html#read-our-privacy-policy'
  key: privacyPolicyChallenge
  tutorial:
    order: 4
-
  name: 'Privacy Policy Inspection'
  category: 'Security through Obscurity'
  description: '개인정보보호 정책을 정말로 읽었다는 것을 증명하세요.'
  difficulty: 3
  hint: '개인정보보호 정책을 자세히 읽은 사람만 이 URL에 접속할 수 있습니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/security-through-obscurity.html#prove-that-you-actually-read-our-privacy-policy'
  key: privacyPolicyProofChallenge
-
  name: 'Product Tampering'
  category: 'Broken Access Control'
  description: '<a href="/#/search?q=OWASP SSL Advanced Forensic Tool (O-Saft)">OWASP SSL Advanced Forensic Tool (O-Saft)</a> 상품 상세 설명의 <code>href</code> 링크를 <i>https://owasp.slack.com</i>로 바꾸세요.'
  difficulty: 3
  hint: '아래 내용을 살펴보세요. a) admin 권한 체크 미흡 b) REST API 취약점 c) SQL injection 가능성'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-access-control.html#change-the-href-of-the-link-within-the-o-saft-product-description'
  key: changeProductChallenge
-
  name: 'Reflected XSS'
  category: 'XSS'
  description: '<code>&lt;iframe src="javascriptalert(`xss`)"&gt;</code> 를 이용해서 Reflected XSS 공격을 시도하세요.'
  difficulty: 2
  hint: 'URL 파라미터에서 연결되는 페이지의 값이 표시되는 곳을 찾으세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/xss.html#perform-a-reflected-xss-attack'
  key: reflectedXssChallenge
  disabledEnv:
    - Docker
    - Heroku
-
  name: 'Repetitive Registration'
  category: 'Improper Input Validation'
  description: '회원 가입시 우리의 "DRY(Don't Repeat Yourself) 원칙"을 따라가 봅시다.'
  difficulty: 1
  hint: 'UI를 교묘하게 조작하거나 완전히 우회하여 문제를 풀 수 있습니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/improper-input-validation.html#follow-the-dry-principle-while-registering-a-user'
  key: passwordRepeatChallenge
-
  name: 'Reset Bender''s Password'
  category: 'Broken Authentication'
  description: '<a href="/#/forgot-password">비밀번호 찾기</a> 메커니즘을 통해 보안 질문에 대한 <i>원래 답변</i>을 입력하여 Bender의 비밀번호를 재설정하세요.'
  difficulty: 4
  hint: '"퓨처라마"에 대한 배경지식이 있다면 그리 어렵지 않을 것입니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-authentication.html#reset-benders-password-via-the-forgot-password-mechanism'
  key: resetPasswordBenderChallenge
-
  name: 'Reset Bjoern''s Password'
  category: 'Broken Authentication'
  description: '<a href="/#/forgot-password">비밀번호 찾기</a> 메커니즘을 통해 보안 질문에 대한 <i>원래 답변</i>을 입력하여 Bjoern의 비밀번호를 재설정하세요.'
  difficulty: 5
  hint: 'Facebook 스토킹으로 모든 것을 알아낼 수 없습니다. 약간의 역사적 지식을 첨가하세요!'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-authentication.html#reset-the-password-of-bjoerns-internal-account-via-the-forgot-password-mechanism'
  key: resetPasswordBjoernChallenge
-
  name: 'Reset Jim''s Password' 
  category: 'Broken Authentication'
  description: '<a href="/#/forgot-password">비밀번호 찾기</a> 메커니즘을 통해 보안 질문에 대한 <i>원래 답변</i>을 입력하여 Jim의 비밀번호를 재설정하세요.'
  difficulty: 3
  hint: 'It''s hard for celebrities to pick a security question from a hard-coded list where the answer is not publicly exposed.' #무슨말인지...
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-authentication.html#reset-jims-password-via-the-forgot-password-mechanism'
  key: resetPasswordJimChallenge
-
  name: 'Reset Morty''s Password'
  category: 'Broken Anti Automation'
  description: '<a href="/#/forgot-password">비밀번호 찾기</a> 메커니즘을 통해 보안 질문에 대한 <i>난독화 된 답변</i>을 사용하여 Morty의 비밀번호를 재설정하세요.'
  difficulty: 5
  hint: '속도 제한과 무차별 대입 제한을 우회하는 방법을 찾으세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-anti-automation.html#reset-mortys-password-via-the-forgot-password-mechanism'
  key: resetPasswordMortyChallenge
-
  name: 'Retrieve Blueprint'
  category: 'Sensitive Data Exposure'
  description: '제품 중 하나의 설계도를 획득해서 상점의 수입을 빼앗으세요.'
  difficulty: 5
  hint: '제품은 우리 OWASP Juice Shop 로고와 비슷하게 생겼습니다(3D-printed).'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#deprive-the-shop-of-earnings-by-downloading-the-blueprint-for-one-of-its-products'
  key: retrieveBlueprintChallenge
-
  name: 'SSRF'
  category: 'Broken Access Control'
  description: '서버를 통해 서버의 숨겨진 자원을 획득하세요.'
  difficulty: 6
  hint: '나쁜 일을 리버스 엔지니어링하면 좋은 일이 일어날 수 있습니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-access-control.html#request-a-hidden-resource-on-server-through-server'
  key: ssrfChallenge
-
  name: 'SSTi'
  category: 'Injection'
  description: '명령어 실행을 통해 서버에 Juicy 악성코드(Juicy malware)를 감염시키세요.'
  difficulty: 6
  hint: '"SSTi(Server-side Template injection)"은 Angular로는 할 수 없다는 것을 알고 계시겠죠. 또한, 우리가 만든 "악성이 아닌" 악성코드를 사용하세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/injection.html#infect-the-server-with-juicy-malware-by-abusing-arbitrary-command-execution'
  key: sstiChallenge
  disabledEnv:
    - Docker
    - Heroku
-
  name: 'Score Board'
  category: 'Miscellaneous'
  description: '''Score Board'' 페이지를 찾으세요.'
  difficulty: 1
  hint: '상점 곳곳에서 힌트를 얻으세요. 또는 URL을 유추해보는 것도 좋습니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/score-board.html#find-the-carefully-hidden-score-board-page'
  key: scoreBoardChallenge
  tutorial:
    order: 1
-
  name: 'Security Policy'
  category: 'Miscellaneous'
  description: '화이트 해커인 척 해보세요.'
  difficulty: 2
  hint: '우리 어플리케이션 연구를 수행하기 전에 당연히 우리 상점의 보안 정책이 궁금하시겠죠?'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/miscellaneous.html#behave-like-any-white-hat-should-before-getting-into-the-action'
  key: securityPolicyChallenge
-
  name: 'Server-side XSS Protection'
  category: 'XSS'
  description: '<code>&lt;iframe src="javascript:alert(`xss`)"&gt;</code>를 이용해서 <i>server-side</i> 보안 로직을 우회하는 XSS 공격을 시도하세요.'
  difficulty: 4
  hint: '"Customer Feedback"메뉴의 "Comment" 가 당신이 집중해야하는 포인트입니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/xss.html#perform-a-persisted-xss-attack-bypassing-a-server-side-security-mechanism'
  key: persistedXssFeedbackChallenge
  disabledEnv:
    - Docker
    - Heroku
-
  name: 'Steganography'
  category: 'Security through Obscurity'
  description: '우리 상점에서 눈에 잘 띄는 곳에 숨어있는 악명 높은 캐릭터를 찾아 <a href="/#/contact">알려주세요.</a> (캐릭터의 정확한 이름을 알려주세요.)'
  difficulty: 4
  hint: '당신의 눈이 얼마나 좋은지 모르겠지만, 이 문제는 툴의 도움 없이는 풀 수 없습니다..'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/security-through-obscurity.html#rat-out-a-notorious-character-hiding-in-plain-sight-in-the-shop'
  key: hiddenImageChallenge
-
  name: 'Successful RCE DoS'
  category: 'Insecure Deserialization'
  description: '무한 루프를 사용하지 않고 잠시동안 서버를 차지하는 원격 코드를 실행하세요.'
  difficulty: 6
  hint: '공격 페이로드는 너무 많은 반복에 대한 방어 로직을 트리거하지 않아야 합니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/insecure-deserialization.html#perform-a-remote-code-execution-that-occupies-the-server-for-a-while-without-using-infinite-loops'
  key: rceOccupyChallenge
  disabledEnv:
    - Docker
    - Heroku
-
  name: 'Supply Chain Attack'
  category: 'Vulnerable Components'
  description: '<a href="/#/contact">우리 상점의 개발 팀</a>에게 <em>그들</em>이 신뢰하는 것중 위험한 것에 대해 알려주세요. (<em>위험 리포트</em>의 URL이나 CVE 코드, 취약점에 대해 알수 있는 다른 URL을 보내세요.)'
  difficulty: 5
  hint: '이 취약점의 목표는 우리 상점의 사용자가 아닙니다. 오직 개발자만을 목표로 합니다..'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/vulnerable-components.html#inform-the-development-team-about-a-danger-to-some-of-their-credentials'
  key: supplyChainAttackChallenge
-
  name: 'Two Factor Authentication'
  category: 'Broken Authentication'
  description: '사용자 "wurstbrot"의 2FA을 통과하세요.(2FA설정을 비활성화, 우회 또는 덮어쓰는 것은 정답이 아닙니다.)'
  difficulty: 5
  hint: '2FA인증을 위해서는 모든 사용자의 비밀 키를 저장해야합니다. 문제를 풀기 위해서는 비밀 키를 알아내야 합니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-authentication.html#solve-the-2fa-challenge-for-user-wurstbrot'
  key: twoFactorAuthUnsafeSecretStorageChallenge
-
  name: 'Unsigned JWT'
  category: 'Vulnerable Components'
  description: '서명되지 않은 JWT 토큰을 이용해서 (존재하지 않는)사용자 <i>jwtn3d@juice-sh.op</i>의 JWT 토큰을 만드세요.'
  difficulty: 5
  hint: 'JWT로 토큰에 서명 할 때 지원되는 이상한 옵션을 이용하세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/vulnerable-components.html#forge-an-essentially-unsigned-jwt-token'
  key: jwtUnsignedChallenge
-
  name: 'Upload Size'
  category: 'Improper Input Validation'
  description: '100KB보다 큰 파일을 업로드하세요.'
  difficulty: 3
  hint: '"Complaint" 메뉴에서는 작은 크기의 파일을 업로드할 수 있습니다. 업로드가 어떻게 일어나는지 확인하세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/improper-input-validation.html#upload-a-file-larger-than-100-kb'
  key: uploadSizeChallenge
-
  name: 'Upload Type'
  category: 'Improper Input Validation'
  description: '.pdf나 .zip 확장자가 아닌 파일을 업로드하세요.'
  difficulty: 3
  hint: '"Complaint" 메뉴에서는 PDF나 ZIP파일을 업로드할 수 있습니다. 업로드가 어떻게 일어나는지 확인하세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/improper-input-validation.html#upload-a-file-that-has-no-pdf-or-zip-extension'
  key: uploadTypeChallenge
-
  name: 'User Credentials'
  category: 'Injection'
  description: 'SQL Injection으로 우리 상점의 모든 사용자 목록을 획득하세요.'
  difficulty: 4
  hint: '사용자 데이터가 저장되는 위치와 처리 방법에 대해 알아보세요. 그 후 UNION SELECT 공격을 시도하세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/injection.html#retrieve-a-list-of-all-user-credentials-via-sql-injection'
  key: unionSqlInjectionChallenge
-
  name: 'Video XSS'
  category: 'XSS'
  description: '<code>&lt;/script&gt;&lt;script&gt;alert(`xss`)&lt;/script&gt;</code>를 이용해서 Promotion 비디오에 스크립트를 심으세요.'
  difficulty: 6
  hint: '다른 6레벨 문제에서 사용한 취약점을 응용하세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/xss.html#embed-an-xss-payload-into-our-promo-video'
  key: videoXssChallenge
  disabledEnv:
    - Docker
    - Heroku
-
  name: 'View Basket'
  category: 'Broken Access Control'
  description: '다른 사람의 장바구니를 훔쳐보세요.'
  difficulty: 2
  hint: '쇼핑할 때 벌어지는 HTTP traffic에 주목하세요. 또는, 고객과 장바구니가 어떻게 연결되는지 찾아보세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-access-control.html#view-another-users-shopping-basket'
  key: basketAccessChallenge
  tutorial:
    order: 7
-
  name: 'Vulnerable Library'
  category: 'Vulnerable Components'
  description: '우리 상점에서 사용하는 라이브러리 중 취약한 라이브러리가 있다면 <a href="/#/contact">우리 상점에게 알려주세요.</a> (라이브러리의 정확한 이름과 버전을 알려주시기 바랍니다.)'
  difficulty: 4
  hint: '"Customer Feedback"의 comment를 통해 가능한 2가지 답변 중 하나를 입력하세요. 라이브러리 버전도 함께 입력하는 것을 잊지마세요!'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/vulnerable-components.html#inform-the-shop-about-a-vulnerable-library-it-is-using'
  key: knownVulnerableComponentChallenge
-
  name: 'Weird Crypto'
  category: 'Cryptographic Issues'
  description: '잘못 사용하고 있는 알고리즘이나 라이브러리를 찾아 <a href="/#/contact">우리 상점에게 알려주세요.</a>'
  difficulty: 2
  hint: '"Customer Feedback"의 comment를 통해 가능한 5가지 답변 중 하나를 입력하세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/cryptographic-issues.html#inform-the-shop-about-an-algorithm-or-library-it-should-definitely-not-use-the-way-it-does'
  key: weirdCryptoChallenge
-
  name: 'Whitelist Bypass'
  category: 'Unvalidated Redirects'
  description: 'Redirect가 허용되지 않은 곳으로 redirect 하세요.'
  difficulty: 4
  hint: 'Redirect whitelist URL 확인을 우회할 수 있는 방법을 찾아보세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/unvalidated-redirects.html#enforce-a-redirect-to-a-page-you-are-not-supposed-to-redirect-to'
  key: redirectChallenge
-
  name: 'XXE Data Access'
  category: 'XXE'
  description: '서버에서 <code>C:\Windows\system.ini</code> 또는 <code>/etc/passwd</code> 파일을 획득하세요.'
  difficulty: 3
  hint: '이 문제의 활용 포인트는 더이상 활용하지 않는 B2B 인터페이스 입니다.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/xxe.html#retrieve-the-content-of-cwindowssystemini-or-etcpasswd-from-the-server'
  key: xxeFileDisclosureChallenge
  disabledEnv:
  - Docker
  - Heroku
-
  name: 'XXE DoS'  # 모르겠음
  category: 'XXE'
  description: 'Give the server something to chew on for quite a while.'
  difficulty: 5
  hint: 'It is not as easy as sending a large amount of data directly to the deprecated B2B interface.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/xxe.html#give-the-server-something-to-chew-on-for-quite-a-while'
  key: xxeDosChallenge
  disabledEnv:
  - Docker
  - Heroku
-
  name: 'Zero Stars'
  category: 'Improper Input Validation'
  description: '우리 상점에 별점 0점의 피드백을 주세요.'
  difficulty: 1
  hint: 'API 우회 시도 전, UI를 사용해보세요!'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/improper-input-validation.html#give-a-devastating-zero-star-feedback-to-the-store'
  key: zeroStarsChallenge
-
  name: 'Missing Encoding'
  category: 'Improper Input Validation'
  description: 'Bjoern의 귀여운 고양이 사진을 찾아보세요.'
  difficulty: 1
  hint: 'Photo Wall 페이지에서 정상적으로 로드되지 못한 이미지를 찾아보세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/improper-input-validation.html#retrieve-the-photo-of-bjoerns-cat-in-melee-combat-mode'
  key: missingEncodingChallenge
-
  name: 'Cross-Site Imaging' # 모르겠음
  category: 'Security Misconfiguration'
  description: 'Stick <a href="http://placekitten.com/" target="_blank">cute cross-domain kittens</a> all over our delivery boxes.'
  difficulty: 5
  hint: 'This challenge would formally have to be in several categories as the developers made multiple gaffes for this to be possible.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/injection.html#stick-cute-cross-domain-kittens-all-over-our-delivery-boxes'
  key: svgInjectionChallenge
-
  name: 'Exposed Metrics'
  category: 'Sensitive Data Exposure'
  description: '<a href="https://github.com/prometheus/prometheus">인기있는 모니터링 시스템</a>에서 스크랩하는 유용한 data를 제공하는 Endpoint를 찾으세요.'
  difficulty: 1
  hint: 'Endpoint가 어떤 URL을 사용할지 추측해보세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#find-the-endpoint-that-serves-usage-data-to-be-scraped-by-a-popular-monitoring-system'
  key: exposedMetricsChallenge
-
  name: 'Deluxe Fraud'
  category: 'Improper Input Validation'
  description: '공짜로 Deluxe Membership 멤버쉽을 획득하세요!'
  difficulty: 3
  hint: '계정을 업그레이드할 때 무슨 일이 벌어지는지 자세히 보세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/improper-input-validation.html#obtain-a-deluxe-membership-without-paying-for-it'
  key: freeDeluxeChallenge
-
  name: 'CSRF' # FIXME No e2e test automation! No longer works in Chrome >=80 or other latest browsers!
  category: 'Broken Access Control'
  description: 'CSRF 공격으로 회원의 이름을 바꾸세요. (<a href="http://htmledit.squarefree.com">HTML 테스트 사이트</a>).'
  difficulty: 3
  hint: 'username을 업데이트하는 form을 찾아 온라인 HTML editor로 악성 페이지를 만드세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/broken-access-control.html#change-the-name-of-a-user-by-performing-cross-site-request-forgery-from-another-origin'
  key: csrfChallenge
-
  name: 'Bonus Payload'
  category: 'XSS'
  description: '보너스 코드 <code>&lt;iframe width=&quot;100%&quot; height=&quot;166&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; allow=&quot;autoplay&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/771984076&amp;color=%23ff5500&amp;auto_play=true&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&quot;&gt;&lt;/iframe&gt;</code>를 사용해서 <i>DOM XSS</i> 공격을 시도하세요'
  difficulty: 1
  hint: 'Copy + Paste = 성공!'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/xss.html#use-the-bonus-payload-in-the-dom-xss-challenge'
  key: xssBonusChallenge
  tutorial:
    order: 3
-
  name: 'Reset Uvogin''s Password'
  category: 'Sensitive Data Exposure'
  description: '<a href="/#/forgot-password">Forgot Password</a> 페이지에서 Uvogin의 Security Question을 풀어 비밀번호를 리셋하세요.'
  difficulty: 4
  hint: 'Security Question에 대한 해답을 얻기 위해서 Uvogin의 SNS에서 OSINT(Open SOurce Intelligence, 공개된 정보)를 찾아보세요.'
  hintUrl: 'https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html#reset-uvogins-password-via-the-forgot-password-mechanism'
  key: resetPasswordUvoginChallenge
-
  name: '무제한 패스워드'
  category: 'Brute Force Attack'
  description: '잘못된 패스워드로 10번 로그인하세요.'
  difficulty: 1
  hint: ''
  hintUrl: ''
  key: infinitePasswordChanllenge
